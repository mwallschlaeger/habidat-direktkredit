extends ../layout

mixin status(tooltip, status)
  td.text-center(data-order=status)
    font(data-toggle="tooltip" title=tooltip)
      if status == 2
        span.fa.fa-check-circle.text-success
      else if status == 0
        span.fa.fa-minus-circle.text-danger
      else if status == 1
        span.fa.fa-question-circle.text-warning 

block content
  .d-none(id="datatable_parent")
    .d-none.datatable-buttons(for-id="datatable_length")

      .datatable-button
        a.datatable-button.btn.btn-light.export-data(href='#' title="Daten exportieren")
          span.fa.fa-file-import 

      .input-group.datatable-button
        .input-group-prepend
          .input-group-text
            span.fa.fa-glasses
        select.custom-select(id="saved_views" title="Gespeicherte Ansichten" autocomplete="off" data-views=currentUser.savedViews || "[]")
          option(value="default") Standardansicht
          each view, index in JSON.parse(currentUser.savedViews || "[]")
            option(value=index)=view.name
        .input-group-append
          button.form-control.datatable-button.btn.btn-light.dropdown-button(title="Ansichtsaktionen" id="view_actions" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
            span.fa.fa-cogs
          .dropdown-menu( aria-labelledby="view_actions")
            a.dropdown-item.create-view(href='#')
              span.fa.fa-plus    
              span  Ansicht erstellen        
            a.dropdown-item.save-view(href='#')
              span.fa.fa-save
              span  Ansicht speichern
            a.dropdown-item.delete-view(href='#')
              span.fa.fa-trash
              span  Ansicht löschen         
        button.form-control.datatable-button.btn.btn-light.delete-view.d-none(title="Ansicht löschen")
          span.fa.fa-trash              

      .datatable-button
        a.datatable-button.btn.btn-light.toggle-filters(href='#' title="Filter anzeigen")
          span.fa.fa-search-plus 

      .datatable-button
        select.checkbox-select(id="column_select" multiple="multiple" autocomplete="off") #[span.fa.fa-cogs]
          each column in contracts.columns
            option(value=column.id selected=column.visible?"selected":undefined)= column.label

      .datatable-button        
        a.datatable-button.btn.btn-light.sidebar-action(href='/user/add' title="Kreditgeber*in Hinzufügen")
          span.fa.fa-plus 
          span  
          span.fa.fa-id-card
    table.table.table-striped(id="datatable" data-auto-width="false")
      thead
        tr
          th.control.fit.text-center(data-orderable="false")
          each column, columnIndex in contracts.columns
            th(data-name=column.id id=column.id data-visible=!column.visible class=column.class data-responsive-priority=(column.priority?column.priority:"100") data-filter=column.filter data-filter-options=column.filterOptions?column.filterOptions:undefined)= column.label
          th(data-orderable="false" data-responsive-priority="1").fit.text-center 
            span.fa.fa-cogs
      tbody
        each row in contracts.data
          tr
            td.control.fit
            each cell, cellIndex in row
              if cell === false
                td(title=_t('no_contract') data-order='' class=contracts.columns[cellIndex].class?contracts.columns[cellIndex].class:"") -
              else
                td(data-order=(cell.order?cell.order:cell.value) class=cell.class + (contracts.columns[cellIndex].class?" "+contracts.columns[cellIndex].class:""))!=cell.value
            td.fit.text-right
              if row[9] === false
                a.btn.btn-light.btn-sm(href='/user/show/'+row[1].value) #[span.fa.fa-search-plus]  
              else
                a.btn.btn-light.btn-sm(href='/user/show/'+row[1].value+'#show_contract_'+row[9].value) #[span.fa.fa-search-plus]
  script(type='text/javascript' src='/public/javascripts/contractlist.js')          
